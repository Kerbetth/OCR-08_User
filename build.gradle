buildscript {
    repositories {
        maven {
            url ' https://bintray.com/bintray/jcenter'
        }
        jcenter()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    archiveBaseName = 'tourguide-user'
    archiveVersion=  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 14
targetCompatibility = 14


dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation group: 'org.javamoney.moneta', name: 'moneta-core', version: '1.3'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.5.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'org.json', name: 'json', version: '20190722'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'


    testImplementation("junit:junit")
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.6.RELEASE'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
